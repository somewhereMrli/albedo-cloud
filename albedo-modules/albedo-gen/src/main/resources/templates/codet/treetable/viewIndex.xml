<?xml version="1.0" encoding="utf-8"?>
<template>
	<name>viewComponentHtml</name>
	<filePath>src/views/${moduleName}/${subModuleName}/${classNameUrl}</filePath>
	<fileName>index.vue</fileName>
	<content><![CDATA[
<template>
  <div class="app-container">
    <!--工具栏-->
    <div class="head-container">
      <div v-if="crud.props.searchToggle">
      <#list table.columnList as column>
      <#if column.query>
      <#if column.showType == "input" || column.showType == "textarea">
          <el-input class="filter-item input-small" v-model="query.${column.javaFieldId}" clearable size="small" placeholder="输入${column.title}搜索" @keyup.enter.native="toQuery" />
      <#elseif column.showType == "select">
        <el-select v-model="query.${column.javaFieldId}" class="filter-item input-small" clearable placeholder="${column.title}" size="small" @change="crud.toQuery">
          <el-option v-for="(item,index) in ${column.javaFieldId}Options" :key="index" :label="item.label" :value="item.value" />
        </el-select>
      <#elseif column.showType == "dateselect">
          <el-date-picker v-model="query.${column.javaFieldId}" type="datetimerange" class="datetime-item" size="small" range-separator=":" start-placeholder="开始日期" end-placeholder="结束日期">
          </el-date-picker>
      </#if>
      </#if>
      </#list>
        <rrOperation />
      </div>
      <crudOperation :permission="permission" />
    </div>
	<!--Form表单-->
    <el-dialog
      :before-close="crud.cancelCU"
      :close-on-click-modal="false"
      :title="crud.status.title"
      :visible.sync="crud.status.cu > 0"
      append-to-body
      width="800px"
    >
      <el-form ref="form" :inline="true" :model="form" label-width="120px" size="small">
      <#list table.columnList as column>
        <#if column.simpleJavaField == 'parentId'>
        <el-form-item label="上级${functionNameSimple}" prop="parentId" :rules="[{ required: true, message: '请选择上级${functionNameSimple}', trigger: 'blur' }]">
          <treeselect v-model="form.parentId" :options="${className}Tree" placeholder="选择上级${functionNameSimple}" class="input-small" />
        </el-form-item>
        <#elseif column.edit && (column.isNotBaseTreeField || column.simpleJavaField == 'name' || column.simpleJavaField == 'sort') && (column.isNotBaseField || column.simpleJavaField == 'description')>
        <el-form-item label="${column.title}" prop="${column.javaFieldId}" :rules="[<#if !column.null>{required: true,message: '请输入${column.title}', trigger: <#if column.showType == "select" || column.showType == "checkbox" || column.showType == "radio">'change'<#else>'blur'</#if>},</#if><#if column.javaType == "Long" || column.javaType == "Integer">{validator:validateDigits},</#if><#if column.javaType == "java.math.BigDecimal" || column.javaType == "Double">{ validator:validateNumber},</#if><#if column.dataLength != 0 && column.javaType == "String">{min: 0,max: ${column.dataLength},message: '长度在 0 到 ${column.dataLength} 个字符', trigger: <#if column.showType == "select" || column.showType == "checkbox" || column.showType == "radio">'change'<#else>'blur'</#if>},</#if>]">
            <#if column.showType == "input">
              <el-input v-model="form.${column.javaFieldId}" class="input-small"></el-input>
            <#elseif column.showType == "textarea">
              <el-input type="textarea" v-model="form.${column.javaFieldId}"></el-input>
            <#elseif column.showType == "select">
			  <el-select v-model="query.${column.javaFieldId}" class="input-small" placeholder="${column.title}">
			    <el-option v-for="(item,index) in ${column.javaFieldId}Options" :key="index" :label="item.label" :value="item.value" />
			  </el-select>
            <#elseif column.showType == "checkbox">
			  <el-checkbox-group v-model="query.${column.javaFieldId}" class="input-small" placeholder="${column.title}">
			    <el-checkbox-button v-for="(item,index) in ${column.javaFieldId}Options" :key="item.value" :label="item.value">{{ item.label }}</el-checkbox-button>
			  </el-checkbox-group>
            <#elseif column.showType == "radio">
			  <el-radio-group v-model="query.${column.javaFieldId}" class="input-small" placeholder="${column.title}">
			    <el-radio-button v-for="(item,index) in ${column.javaFieldId}Options" :key="item.value" :label="item.value">{{ item.label }}</el-radio-button>
			  </el-radio-group>
            <#elseif column.showType == "dateselect">
              <el-date-picker v-model="form.${column.javaFieldId}" type="datetime" value-format="yyyy-MM-dd HH:mm:ss" >
              </el-date-picker>
           </#if>
        <#if column.comments??&& column.comments != ''><div>
		  <el-tag type="info" size="mini">${column.comments}</el-tag>
		</div></#if>
        </el-form-item>
        </#if>
    </#list>
    </el-form>
      <div slot="footer" class="dialog-footer">
        <el-button type="text" @click="crud.cancelCU">取消</el-button>
        <el-button :loading="crud.status.cu === 2" type="primary" @click="crud.submitCU">确认</el-button>
      </div>
    </el-dialog>
    <!--表格渲染-->
    <el-table
      ref="table" row-key="id"
      v-loading="crud.loading"
      :data="crud.data"
      style="width: 100%;"
      @sort-change="crud.sortChange"
      @selection-change="crud.selectionChangeHandler"
    >
      <el-table-column type="selection" width="55" />
          <#list table.columnList as column>
      <#if column.list && column.simpleJavaField!="parentId" && column.simpleJavaField!="parentIds" && column.simpleJavaField!="parent">
      <el-table-column align="center" label="${column.title}" :show-overflow-tooltip="true" prop="${column.simpleJavaField}"<#if column.dictType?? && column.dictType != ""> >
        <template slot-scope="scope">
		  <el-tag>{{scope.row.${column.simpleJavaField}Text}}</el-tag>
        </template>
      </el-table-column><#else> /></#if>
      </#if>
      </#list>
          <el-table-column v-permission="[permission.edit,permission.del]" label="操作" width="120px" fixed="right">
        <template slot-scope="scope">
          <udOperation :data="scope.row" :permission="permission" />
        </template>
      </el-table-column>
    </el-table>
	<!--分页组件-->
    <pagination />
  </div>
</template>

<script>
import crud${ClassName} from '@/views/${moduleName}<#if subModuleName != "">/${subModuleName}</#if>/${classNameUrl}/${classNameUrl}-service'
import CRUD, { crud, form, header, presenter } from '@crud/crud'
import rrOperation from '@crud/RR.operation'
import udOperation from '@crud/UD.operation'
import crudOperation from '@crud/CRUD.operation'
import pagination from '@crud/Pagination'
import Treeselect from '@riophae/vue-treeselect'
import '@riophae/vue-treeselect/dist/vue-treeselect.css'
import validate from '@/utils/validate'
import { mapGetters } from 'vuex'<#assign flag = false><#list table.columnList as column><#if column.dictType?? && column.dictType != '' && column.simpleJavaType != 'String'><#assign flag = true></#if></#list>
<#if flag>import commonUtil from '@/utils/common'</#if>
const defaultForm = {
  <#list table.columnList as column>
	<#if column.edit && (column.isNotBaseTreeField || column.simpleJavaField == 'name' || column.simpleJavaField == 'sort') && (column.isNotBaseField || column.simpleJavaField == 'description')>
  ${column.javaFieldId}: null,
	</#if>
  </#list>
}
export default {
  name: '${ClassName}',
  components: {Treeselect,  crudOperation, rrOperation, udOperation, pagination },
  cruds() {
    return CRUD({ title: '${functionNameSimple}', crudMethod: { ...crud${ClassName} }})
  },
  mixins: [presenter(), header(), form(defaultForm), crud()],
  // 数据字典
  data() {
    return {
      ${className}Tree:[],
      <#list table.columnList as column>
        <#if column.dictType??&& column.dictType != ''>
      ${column.javaFieldId}Options: undefined,
        </#if>
       </#list>
      validateNumber: (rule, value, callback) => {
        validate.isNumber(rule, value, callback)
      },
      validateDigits: (rule, value, callback) => {
        validate.isDigits(rule, value, callback)
      },
      permission: {
        edit: '${permissionPrefix}_edit',
        del: '${permissionPrefix}_del'
      }
     }
  },
  computed: {
    ...mapGetters(["permissions","dicts"])
  },
  created() {
    <#list table.columnList as column><#if column.dictType?? && column.dictType != ''>
    this.${column.javaFieldId}Options = this.dicts["${column.dictType}"]
    </#if></#list>
  },
  methods: {
    // 新增与编辑前做的操作
    [CRUD.HOOK.afterToCU](crud, form) {
    <#list table.columnList as column><#if column.dictType?? && column.dictType != '' && column.simpleJavaType != 'String'>
      form.${column.javaFieldId}Options = commonUtil.objToStr(form.${column.javaFieldId}Options)
    </#if></#list>
      crud${ClassName}.getTree({ notId: form.id }).then(res => {
        this.${className}Tree = []
        const menu = { id: -1, label: '顶级类目', children: [] }
        menu.children = res.data
        this.${className}Tree.push(menu)
      })
    },
  }
};
</script>
]]>
	</content>
</template>
