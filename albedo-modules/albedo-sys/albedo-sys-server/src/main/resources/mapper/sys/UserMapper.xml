<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~  Copyright (c) 2019-2020, somewhere (somewhere0813@gmail.com).
  ~  <p>
  ~  Licensed under the GNU Lesser General Public License 3.0 (the "License");
  ~  you may not use this file except in compliance with the License.
  ~  You may obtain a copy of the License at
  ~  <p>
  ~ https://www.gnu.org/licenses/lgpl.html
  ~  <p>
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.albedo.java.modules.sys.repository.UserRepository">

	<!-- 通用查询映射结果 -->
	<resultMap id="BaseResultMap" type="com.albedo.java.modules.sys.domain.User">
		<id column="id" property="id"/>
		<result column="username" property="username"/>
		<result column="password" property="password"/>
		<result column="nickname" property="nickname"/>
		<result column="phone" property="phone"/>
		<result column="email" property="email"/>
		<result column="avatar" property="avatar"/>
		<result column="wx_open_id" property="wxOpenId"/>
		<result column="qq_open_id" property="qqOpenId"/>
		<result column="available" property="available"/>
		<result column="created_by" property="createdBy"/>
		<result column="created_date" property="createdDate"/>
		<result column="last_modified_by" property="lastModifiedBy"/>
		<result column="last_modified_date" property="lastModifiedDate"/>
		<result column="description" property="description"/>
		<result column="version" property="version"/>
		<result column="del_flag" property="delFlag"/>
		<result column="deptId" property="deptId"/>
	</resultMap>
	<!-- 分页userVo结果集 -->
	<resultMap id="userVoPageResultMap" type="com.albedo.java.modules.sys.domain.vo.UserPageVo">
		<id column="id" property="id"/>
		<result column="username" property="username"/>
		<result column="password" property="password"/>
		<result column="nickname" property="nickname"/>
		<result column="phone" property="phone"/>
		<result column="email" property="email"/>
		<result column="avatar" property="avatar"/>
		<result column="wx_open_id" property="wxOpenId"/>
		<result column="qq_open_id" property="qqOpenId"/>
		<result column="available" property="available"/>
		<result column="created_by" property="createdBy"/>
		<result column="created_date" property="createdDate"/>
		<result column="last_modified_by" property="lastModifiedBy"/>
		<result column="last_modified_date" property="lastModifiedDate"/>
		<result column="description" property="description"/>
		<result column="version" property="version"/>
		<result column="del_flag" property="delFlag"/>
		<result column="deptId" property="deptId"/>
		<result column="deptName" property="deptName"/>
		<collection property="roleList" ofType="com.albedo.java.modules.sys.domain.Role"
					select="com.albedo.java.modules.sys.repository.RoleRepository.findListByUserId" column="id">
		</collection>
	</resultMap>

	<!-- userVo结果集 -->
	<resultMap id="userVoResultMap" type="com.albedo.java.modules.sys.domain.vo.UserVo">
		<id column="id" property="id"/>
		<result column="username" property="username"/>
		<result column="password" property="password"/>
		<result column="nickname" property="nickname"/>
		<result column="phone" property="phone"/>
		<result column="email" property="email"/>
		<result column="avatar" property="avatar"/>
		<result column="wx_open_id" property="wxOpenId"/>
		<result column="qq_open_id" property="qqOpenId"/>
		<result column="available" property="available"/>
		<result column="created_by" property="createdBy"/>
		<result column="created_date" property="createdDate"/>
		<result column="last_modified_by" property="lastModifiedBy"/>
		<result column="last_modified_date" property="lastModifiedDate"/>
		<result column="description" property="description"/>
		<result column="version" property="version"/>
		<result column="del_flag" property="delFlag"/>
		<result column="dept_id" property="deptId"/>
		<result column="dept_name" property="deptName"/>
		<collection property="roleList" ofType="com.albedo.java.modules.sys.domain.Role">
			<id column="role_id" property="id"/>
			<result column="role_name" property="name"/>
			<result column="role_data_scope" property="dataScope"/>
			<result column="role_level" property="level"/>
			<result column="role_created_by" property="createdBy"/>
			<result column="role_created_date" property="createdDate"/>
			<result column="role_last_modified_by" property="lastModifiedBy"/>
			<result column="role_last_modified_date" property="lastModifiedDate"/>
			<result column="role_description" property="description"/>
			<result column="role_version" property="version"/>
			<result column="role_del_flag" property="delFlag"/>
		</collection>
	</resultMap>

	<sql id="userRoleDeptSql">
		a.id,
		a.username,
		a.`password`,
		a.nickname,
		a.phone,
		a.email,
		a.avatar,
		a.wx_open_id,
		a.qq_open_id,
		a.created_by,
		a.created_date,
		a.last_modified_by,
		a.last_modified_date,
		a.description,
		a.version,
		a.del_flag,
		a.available AS available,
		r.id AS role_id,
		r.name AS role_name,
		r.data_scope AS role_data_scope,
		r.level AS role_level,
		r.created_by AS role_created_by,
		r.created_date AS role_created_date,
		r.last_modified_by AS role_last_modified_by,
		r.last_modified_date AS role_last_modified_date,
		r.description AS role_description,
		r.version AS role_version,
		r.del_flag AS role_del_flag,
		d.name AS dept_name,
		d.id AS dept_id
    </sql>

	<select id="findVoByUsername" resultMap="userVoResultMap">
		SELECT
		<include refid="userRoleDeptSql"/>
		FROM
		sys_user AS a
		LEFT JOIN sys_user_role AS ur ON ur.user_id = a.id
		LEFT JOIN sys_role AS r ON r.id = ur.role_id
		LEFT JOIN sys_dept AS d ON d.id = a.dept_id
		WHERE a.username = #{username} and a.del_flag='0' and r.available = 1 and d.available = 1
	</select>

	<select id="findUserVoById" resultMap="userVoResultMap">
		SELECT
		<include refid="userRoleDeptSql"/>
		FROM
		sys_user AS a
		LEFT JOIN sys_user_role AS ur ON ur.user_id = a.id
		LEFT JOIN sys_role AS r ON r.id = ur.role_id
		LEFT JOIN sys_dept AS d ON d.id = a.dept_id
		WHERE
		a.id = #{id} and a.del_flag='0' and r.available = 1 and d.available = 1
	</select>

	<select id="findUserVoPage" resultMap="userVoPageResultMap">
		SELECT
		a.id,
		a.username,
		a.`password`,
		a.nickname,
		a.phone,
		a.email,
		a.avatar,
		a.wx_open_id,
		a.qq_open_id,
		a.dept_id,
		a.created_by,
		a.created_date,
		a.last_modified_by,
		a.last_modified_date,
		a.description,
		a.version,
		a.del_flag,
		a.available AS available,
		a.dept_id AS deptId,
		b.name AS deptName
		FROM
		sys_user AS a
		INNER JOIN sys_dept AS b ON b.id = a.dept_id
		<where>
			${ew.sqlSegment}
		</where>
	</select>

	<select id="findListByRoleId" resultType="com.albedo.java.modules.sys.domain.User">
		SELECT
            a.*
        FROM
        sys_user a, sys_user_role b WHERE a.id = b.user_id AND a.del_flag = 0 and a.available = 1 and b.role_id = #{roleId}
	</select>

	<select id="findListByRoleIds" resultType="com.albedo.java.modules.sys.domain.User">

		SELECT
		a.*
		FROM
		sys_user a, sys_user_role b WHERE a.id = b.user_id AND a.del_flag = 0 and a.available = 1 and b.role_id IN
		<foreach item="id" collection="roleIds" separator="," open="(" close=")">
			#{id}
		</foreach>
	</select>

	<select id="findListByMenuId" resultType="com.albedo.java.modules.sys.domain.User">
		SELECT
            a.*
        FROM
        sys_user a, sys_user_role b, sys_role_menu c, sys_role d WHERE a.id = b.user_id AND c.role_id=b.role_id and c.role_id = d.id AND d.del_flag = 0 and d.available = 1 AND a.del_flag = 0 and a.available = 1 and c.menu_id = #{menuId}
	</select>


</mapper>
